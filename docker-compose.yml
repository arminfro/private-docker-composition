version: '3.3'

services:

  # # # # Nextcloud start
  nextcloud_db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - nextcloud_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nextcloud_db
      MYSQL_USER: nextcloud_db_user
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${NEXTCLOUD_MYSQL_ROOT_PASSWORD}

  nextcloud_redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - backend

  nextcloud_app:
    build: ./nextcloud_app
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - nextcloud:/var/www/html
    environment:
      MYSQL_HOST: nextcloud_db
      REDIS_HOST: nextcloud_redis
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
    depends_on:
      - nextcloud_db
      - nextcloud_redis
      - nextcloud_coturn

  nextcloud_web:
    build: ./nextcloud_web
    restart: unless-stopped
    networks:
      - frontend
      - backend
    volumes:
      - nextcloud:/var/www/html:ro
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${NEXTCLOUD_URLS}
      VIRTUAL_NETWORK: nginx-proxy
      LETSENCRYPT_HOST: ${NEXTCLOUD_URLS}
    depends_on:
      - nextcloud_app
      - collabora

  collabora:
    image: collabora/code
    cap_add:
      - MKNOD
    networks:
      - frontend
      - backend
    expose:
      - 9980
    environment:
      domain: ${NEXTCLOUD_DOMAIN_ESCAPED}
      username: ${OFFICE_ADMIN}
      password: ${OFFICE_PASSWORD}
      dictionaries: 'de en'
      VIRTUAL_HOST: ${NEXTCLOUD_OFFICE_URLS}
      LETSENCRYPT_HOST: ${NEXTCLOUD_OFFICE_URLS}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_PORT: 9980
      extra_params: '--o:ssl.enable=false --o:ssl.termination=true'

  nextcloud_cron:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    networks:
      - backend
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud_db
      - nextcloud_redis

  nextcloud_coturn:
    build: ./nextcloud_coturn
    restart: unless-stopped
    ports:
        - 3478:3478/udp
    depends_on:
      - nextcloud_db
    environment:
        - COTURN_SECRET=${COTURN_SECRET}
        - COTURN_REALM=${COTURN_REALM}
  # Nextcloud end # # #

  # # # # # Matrix start
  matrix_postgres:
    image: postgres:12-alpine
    restart: always
    networks:
      - backend
    volumes:
     - matrix_postgres_data:/var/lib/postgresql/data

    # These will be used in homeserver.yaml later on
    environment:
     - POSTGRES_PASSWORD=${MATRIX_POSTGRES_PASSWORD}
     - POSTGRES_USER=${MATRIX_POSTGRES_USER}
     # ensure the database gets created correctly, https://github.com/matrix-org/synapse/blob/master/docs/postgres.md#set-up-database
     - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

  matrix_synapse:
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    networks:
      - backend
    ports:
     - 8443:8443/tcp
    volumes:
     - ./matrix/data:/data
    depends_on:
      - matrix_postgres
    environment:
      SYNAPSE_CONFIG_PATH: /data/homeserver.yaml
      SYNAPSE_SERVER_NAME: ${MATRIX_SYNAPSE_URL}
      VIRTUAL_HOST: ${MATRIX_SYNAPSE_URLS}
      LETSENCRYPT_HOST: ${MATRIX_SYNAPSE_URLS}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
  # Matrix end # # #

  # # # # Gitlab start
  gitlab:
    image: gitlab/gitlab-ce:latest
    hostname: ${GITLAB_HOSTNAME}
    restart: unless-stopped
    networks:
      - frontend
    ports:
    - target: 22
      published: 39904 # PUBLIC_SSH_PORT, can't be a string from .env
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    environment:
      # GITLAB_OMNIBUS_CONFIG: "registry['log_level'] = 'warn'" # @FIXME, no effect
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${GITLAB_URLS}
      LETSENCRYPT_HOST: ${GITLAB_URLS}

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - gitlab
    volumes:
      - /srv/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
  # # Gitlab end # # #

  # # # # Proxy-Webserver start
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: unless-stopped
    depends_on:
      - nginx_proxy
    networks:
      - backend
    environment:
      DEFAULT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - proxy_conf:/etc/nginx/conf.d
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_dhparam:/etc/nginx/dhparam
      - proxy_certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx_proxy:
    build: ./nginx_proxy
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend
      - backend
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - proxy_certs:/etc/nginx/certs:ro
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
  # Proxy-Webserver end # # #

volumes:
  proxy_conf:
  proxy_vhost:
  proxy_html:
  proxy_dhparam:
  proxy_certs:

  wordpress:
  wordpress_db:

  nextcloud:
  nextcloud_db:

  gitlab_config:
  gitlab_logs:
  gitlab_data:

  matrix_postgres_data:
  matrix_synapse_data:

networks:
  frontend:
  backend:
