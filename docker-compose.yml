version: '3.3'

services:

  # # # # Nextcloud start
  nextcloud_db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - nextcloud_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: nextcloud_db
      MYSQL_USER: nextcloud_db_user
      MYSQL_PASSWORD: ${NC_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${NC_MYSQL_ROOT_PASSWORD}

  nextcloud_redis:
    image: redis:alpine
    restart: unless-stopped

  nextcloud_app:
    build: ./nextcloud_app
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html
    environment:
      MYSQL_HOST: nextcloud_db
      REDIS_HOST: nextcloud_redis
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_TRUSTED_DOMAINS}
    depends_on:
      - nextcloud_db
      - nextcloud_redis

  nextcloud_web:
    build: ./nextcloud_web
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html:ro
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${NC_URLS}
      VIRTUAL_NETWORK: nginx-proxy
      LETSENCRYPT_HOST: ${NC_URLS}
    depends_on:
      - nextcloud_app

  # Causes bug when opening file from new Nextcloud menu
  #  WRN  Kit connection lost without exit arriving from wsd. Setting TerminationFlag| kit/Kit.cpp:2236
  #  collabora exited with code 139
  collabora:
    image: collabora/code
    cap_add:
      - MKNOD
    environment:
      domain: ${DOMAIN}
      LETSENCRYPT_HOST: ${NC_OFFICE_URLS}
      VIRTUAL_NETWORK: nginx-proxy
      VIRTUAL_PORT: 9980
      VIRTUAL_PROTO: https
      LETSENCRYPT_HOST: ${NC_OFFICE_URLS}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}

  nextcloud_cron:
    image: nextcloud:fpm-alpine
    restart: unless-stopped
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud_db
      - nextcloud_redis

  nextcloud_letsencrypt_companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    volumes:
      - proxy_certs:/etc/nginx/certs
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx_proxy
  # Nextcloud end # # #

  # # # # Wordpress start
  wordpress_db:
    image: mariadb:latest
    restart: unless-stopped
    volumes:
      - wordpress_db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: worpress_db
      MYSQL_USER: wp_db_user
      MYSQL_PASSWORD: ${WP_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${WP_MYSQL_ROOT_PASSWORD}

  wordpress:
    image: wordpress:latest
    restart: unless-stopped
    depends_on:
      - wordpress_db
    volumes:
       - wordpress:/var/www/html
       - wordpress_db:/var/lib/mysql
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${WP_URLS}
      LETSENCRYPT_HOST: ${WP_URLS}
      WORDPRESS_DB_HOST: wordpress_db
      WORDPRESS_DB_NAME: wordpress_db
      WORDPRESS_DB_USER: wp_db_user
      WORDPRESS_DB_PASSWORD: ${WP_MYSQL_PASSWORD}
  # Wordpress end # # #

  # # # # # Adminer start
  adminer:
    image: adminer #:fastcgi
    restart: unless-stopped
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${ADMINER_URLS}
      LETSENCRYPT_HOST: ${ADMINER_URLS}
      # VIRTUAL_PORT: 9000
      # VIRTUAL_PROTO: fastcgi
  # Adminer end # # #

  # # # # Gitlab start
  gitlab:
    image: gitlab/gitlab-ce:latest
    hostname: ${GL_URLS}
    restart: unless-stopped
    ports:
    - target: 22
      published: 39904 # PUBLIC_SSH_PORT, can't be a string from .env
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    environment:
      # GITLAB_OMNIBUS_CONFIG: "registry['log_level'] = 'warn'" # @FIXME, no effect
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${GL_URLS}
      LETSENCRYPT_HOST: ${GL_URLS}

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    restart: unless-stopped
    depends_on:
      - gitlab
    volumes:
      - /srv/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
  # Gitlab end # # #

  # # # # Prometheus start
  prometheus:
    image: prom/prometheus:v2.1.0
    restart: unless-stopped
    volumes:
      - ./monitor/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"

  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    volumes:
      - ./monitor/alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    user: "104"
    depends_on:
      - prometheus
    environment:
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      VIRTUAL_HOST: ${GRAFANA_URLS}
      LETSENCRYPT_HOST: ${GRAFANA_URLS}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitor/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./monitor/grafana/config.monitoring
  # Prometheus end # # #

  # # # # Proxy-Webserver start
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    restart: unless-stopped
    depends_on:
      - nginx_proxy
    environment:
      DEFAULT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - proxy_conf:/etc/nginx/conf.d
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - proxy_dhparam:/etc/nginx/dhparam
      - proxy_certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  nginx_proxy:
    build: ./nginx_proxy
    restart: unless-stopped
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - proxy_certs:/etc/nginx/certs:ro
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
  # Proxy-Webserver end # # #

volumes:
  proxy_conf:
  proxy_vhost:
  proxy_html:
  proxy_dhparam:
  proxy_certs:

  wordpress:
  wordpress_db:

  nextcloud:
  nextcloud_db:

  gitlab_config:
  gitlab_logs:
  gitlab_data:

  prometheus_data: {}
  grafana_data: {}
